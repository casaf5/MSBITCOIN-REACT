{"version":3,"sources":["services/bitcoinService.js","cmps/LoadingCmp/LoadingCmp.jsx","cmps/MoveList/MoveList.jsx","pages/Home/Home.jsx","cmps/ContactPreview/ContactPreview.jsx","cmps/ContactsList/ContactsList.jsx","cmps/ContactsFilter/ContactsFilter.jsx","services/utilsService.js","services/storageService.js","services/contactService.js","actions/contactsActions.js","pages/Contacts/Contacts.jsx","pages/Statistics/Statistics.jsx","cmps/AppFooter/AppFooter.jsx","services/userService.js","actions/usersActions.js","cmps/AppHeader/AppHeader.jsx","cmps/TransferFund/TransferFund.jsx","pages/ContactDetails/ContactDetails.jsx","pages/ContactEdit/ContactEdit.jsx","pages/Login/Login.jsx","App.js","reducers/ContactReducer.js","reducers/UserReducer.js","store.js","serviceWorker.js","index.js"],"names":["bitcoinService","getRate","getMarketPrice","getAvgBlockSize","getTradeData","amount","a","axios","get","rate","data","marketData","chartData","values","map","dayPrice","y","LoadingCmp","className","MoveList","props","moves","move","idx","key","status","toName","completedAt","rateAtTransfer","_Home","state","this","setState","loggedUser","history","push","name","coins","length","Component","Home","connect","userReducer","ContactPreview","contact","_id","to","src","alt","title","ContactsList","contacts","ContactsFilter","filterBy","setFilter","target","value","onSetFilter","type","placeholder","onChange","utilsService","genID","len","chars","randID","i","getRandomInteger","min","max","Math","ceil","floor","random","storageService","save","localStorage","setItem","JSON","stringify","load","parse","getItem","remove","removeItem","contactService","query","Promise","resolve","reject","_contactsToReturn","_contacts","filter","sort","getContactById","id","find","removeContact","findIndex","splice","saveContact","c","_updateContact","_addContact","getEmptyContact","email","phone","b","toLocaleLowerCase","term","includes","_setContacts","_saveContact","_Contacts","loadContacts","mapDispatchToProps","dispatch","getState","contactReducer","_setFilter","Contacts","Statistics","avgData","tradeData","style","stroke","fill","AppFooter","userService","login","logout","signup","addMove","_users","newUser","user","u","_buildMove","Date","toLocaleDateString","unshift","_login","_logout","_transfer","updatedUser","_AppHeader","onClick","AppHeader","withRouter","_TransferFund","errorMsg","coinsAmount","handleChange","onTransferCoins","ev","preventDefault","contactName","transferCoins","onSubmit","TransferFund","_ContactDetails","loadContact","match","params","ContactDetails","_ContactEdit","field","prevState","onSubmitChanges","savedContact","console","log","ContactEdit","_Login","userToLog","Login","App","exact","component","path","INITIAL_STATE","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c0ed1434.chunk.js","sourcesContent":["import axios from 'axios'\nexport const bitcoinService={\n    getRate,\n    getMarketPrice,\n    getAvgBlockSize,\n    getTradeData,\n}\n\nasync function getRate(amount){\n    const rate=await axios.get(`https://blockchain.info/tobtc?currency=USD&value=${amount}`)\n    return rate.data    \n}\n\nasync function getMarketPrice(){\n    const marketData=await axios.get(`https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true`)\n    const chartData= marketData.data.values.map(dayPrice=>dayPrice.y)\n    return chartData\n}\n\nasync function getAvgBlockSize(){\n    const marketData=await axios.get(`https://api.blockchain.info/charts/avg-block-size?timespan=5months&format=json&cors=true`)\n    const chartData= marketData.data.values.map(dayPrice=>dayPrice.y)\n    return chartData\n}\nasync function getTradeData(){\n    const marketData=await axios.get(`https://api.blockchain.info/charts/trade-volume?timespan=5months&format=json&cors=true`)\n    const chartData= marketData.data.values.map(dayPrice=>dayPrice.y)\n    return chartData\n}","import React from \"react\";\nimport \"./LoadingCmp.scss\";\n\nexport function LoadingCmp() {\n  return (\n    <div className=\"loader-wrapper\">\n      <section className=\"loader\">\n        <span>Loading...</span>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport './MoveList.scss';\n\nexport function MoveList(props) {\n  const { moves } = props;\n  return (\n    <section className='move-list'>\n      <ul>\n        {moves.map((move, idx) => {\n          return (\n            <li key={idx}>\n              <h6 className={'col-layout ' + move.status}>\n                <i className='far fa-arrow-alt-circle-up'></i>\n                <span>{move.status}</span>\n              </h6>\n              <h3>\n                <i className='fas fa-user'></i> {move.toName}\n              </h3>\n              <h3>\n                <i className='fas fa-clock'></i>\n                {move.completedAt}\n              </h3>\n              <h3>\n                <i className='fab fa-bitcoin'></i> {move.amount}\n              </h3>\n              <h3 className='rate'>\n                <i className='far fa-heart-rate'></i>\n                {move.rateAtTransfer}\n              </h3>\n            </li>\n          );\n        })}\n      </ul>\n    \n    </section>\n  );\n}\n","import React, { Component } from 'react';\nimport './Home.scss';\nimport { bitcoinService } from '../../services/bitcoinService';\nimport { LoadingCmp } from '../../cmps/LoadingCmp/LoadingCmp';\nimport { MoveList } from '../../cmps/MoveList/MoveList';\nimport { connect } from 'react-redux';\n\nexport class _Home extends Component {\n  state = { rate: null };\n  async componentDidMount() {\n    const rate = await bitcoinService.getRate(1);\n    this.setState({ rate });\n    if (!this.props.loggedUser) this.props.history.push('/login');\n  }\n  render() {\n    const { loggedUser } = this.props;\n    const { rate } = this.state;\n    if (!loggedUser || !rate) return <LoadingCmp />;\n    return (\n      <section className='home-page flex col'>\n        <section className='user-wrapper'>\n          <section className='user-details flex col space-between'>\n            <h4 className='user-title'>Welcome ,{loggedUser.name}</h4>\n            <section className='info flex space-around'>\n              <h3>\n                <i className='fas fa-coins'></i>Coins: {loggedUser.coins}\n              </h3>\n              <h3>\n                <i className='far fa-heart-rate'></i>BTC(1$): {rate}\n              </h3>\n              <h3>\n                <i className='fas fa-sync'></i>Total Transactions: {loggedUser.moves.length}\n              </h3>\n            </section>\n          </section>\n        </section>\n        <MoveList moves={loggedUser.moves} />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loggedUser: state.userReducer.loggedUser,\n});\n\nexport const Home = connect(mapStateToProps, null)(_Home);\n","import React from \"react\";\nimport \"./ContactPreview.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport function ContactPreview(props) {\n  const { _id, name } = props.contact;\n  return (\n    <section className=\"contact-preview flex col\">\n      <Link to={`contacts/details/${_id}`}>\n        <img src={`https://robohash.org/${_id}?set=set5`} alt=\"profile-pic\" />\n        <h3 className=\"contact-name\">{name}</h3>\n      </Link>\n      <Link to={`contacts/edit/${_id}`}>\n        <i className=\"fas fa-user-edit\" title=\"Edit User\"></i>\n      </Link>\n    </section>\n  );\n}\n","import React from \"react\";\n// import \"./ContactsList.scss\";\nimport { ContactPreview } from \"../ContactPreview/ContactPreview\";\n\nexport function ContactsList(props) {\n  return (\n    <section className=\"contacts-list flex wrap justify-center\">\n      {props.contacts.map((contact) => (\n        <ContactPreview key={contact._id} contact={contact} />\n      ))}\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./ContactsFilter.scss\";\n\nexport class ContactsFilter extends Component {\n  state = { filterBy: null };\n  setFilter = ({ target }) => {\n    const filterBy = target.value;\n    this.setState({ filterBy },  () => {\n       this.props.onSetFilter( {...this.state });\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"contacts-filter\">\n        <input type=\"text\" placeholder=\"Search...\" onChange={this.setFilter} />\n      </section>\n    );\n  }\n}\n","export const utilsService ={\n    genID,\n  };\n  function genID(len = 20) {\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789';\n    var randID = '';\n    for (let i = 0; i < len; i++) {\n      randID += chars[getRandomInteger(0, chars.length)];\n    }\n    return randID;\n  }\n  \n  function getRandomInteger(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  \n  \n  ","export const storageService = {\n  save,\n  load,\n  remove,\n};\n\nfunction save(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\nfunction load(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nfunction remove(key) {\n  localStorage.removeItem(key);\n}\n","import { utilsService } from \"../services/utilsService\";\nimport { storageService } from \"../services/storageService\";\nexport const contactService = {\n  query,\n  getContactById,\n  removeContact,\n  saveContact,\n  getEmptyContact,\n};\nconst CONTACTS = [\n  {\n    _id: \"5a56640269f443a5d64b32ca\",\n    name: \"Ochoa Hyde\",\n    email: \"ochoahyde@renovize.com\",\n    phone: \"+1 (968) 593-3824\",\n  },\n  {\n    _id: \"5a5664025f6ae9aa24a99fde\",\n    name: \"Hallie Mclean\",\n    email: \"halliemclean@renovize.com\",\n    phone: \"+1 (948) 464-2888\",\n  },\n  {\n    _id: \"5a56640252d6acddd183d319\",\n    name: \"Parsons Norris\",\n    email: \"parsonsnorris@renovize.com\",\n    phone: \"+1 (958) 502-3495\",\n  },\n  {\n    _id: \"5a566402ed1cf349f0b47b4d\",\n    name: \"Rachel Lowe\",\n    email: \"rachellowe@renovize.com\",\n    phone: \"+1 (911) 475-2312\",\n  },\n  {\n    _id: \"5a566402abce24c6bfe4699d\",\n    name: \"Dominique Soto\",\n    email: \"dominiquesoto@renovize.com\",\n    phone: \"+1 (807) 551-3258\",\n  },\n  {\n    _id: \"5a566402a6499c1d4da9220a\",\n    name: \"Shana Pope\",\n    email: \"shanapope@renovize.com\",\n    phone: \"+1 (970) 527-3082\",\n  },\n  {\n    _id: \"5a566402f90ae30e97f990db\",\n    name: \"Faulkner Flores\",\n    email: \"faulknerflores@renovize.com\",\n    phone: \"+1 (952) 501-2678\",\n  },\n  {\n    _id: \"5a5664027bae84ef280ffbdf\",\n    name: \"Holder Bean\",\n    email: \"holderbean@renovize.com\",\n    phone: \"+1 (989) 503-2663\",\n  },\n  {\n    _id: \"5a566402e3b846c5f6aec652\",\n    name: \"Rosanne Shelton\",\n    email: \"rosanneshelton@renovize.com\",\n    phone: \"+1 (968) 454-3851\",\n  },\n  {\n    _id: \"5a56640272c7dcdf59c3d411\",\n    name: \"Pamela Nolan\",\n    email: \"pamelanolan@renovize.com\",\n    phone: \"+1 (986) 545-2166\",\n  },\n  {\n    _id: \"5a5664029a8dd82a6178b15f\",\n    name: \"Roy Cantu\",\n    email: \"roycantu@renovize.com\",\n    phone: \"+1 (929) 571-2295\",\n  },\n  {\n    _id: \"5a5664028c096d08eeb13a8a\",\n    name: \"Ollie Christian\",\n    email: \"olliechristian@renovize.com\",\n    phone: \"+1 (977) 419-3550\",\n  },\n  {\n    _id: \"5a5664026c53582bb9ebe9d1\",\n    name: \"Nguyen Walls\",\n    email: \"nguyenwalls@renovize.com\",\n    phone: \"+1 (963) 471-3181\",\n  },\n  {\n    _id: \"5a56640298ab77236845b82b\",\n\n    name: \"Glenna Santana\",\n    email: \"glennasantana@renovize.com\",\n    phone: \"+1 (860) 467-2376\",\n  },\n  {\n    _id: \"5a56640208fba3e8ecb97305\",\n    name: \"Malone Clark\",\n    email: \"maloneclark@renovize.com\",\n    phone: \"+1 (818) 565-2557\",\n  },\n  {\n    _id: \"5a566402abb3146207bc4ec5\",\n    name: \"Floyd Rutledge\",\n    email: \"floydrutledge@renovize.com\",\n    phone: \"+1 (807) 597-3629\",\n  },\n  {\n    _id: \"5a56640298500fead8cb1ee5\",\n    name: \"Grace James\",\n    email: \"gracejames@renovize.com\",\n    phone: \"+1 (959) 525-2529\",\n  },\n  {\n    _id: \"5a56640243427b8f8445231e\",\n    name: \"Tanner Gates\",\n    email: \"tannergates@renovize.com\",\n    phone: \"+1 (978) 591-2291\",\n  },\n  {\n    _id: \"5a5664025c3abdad6f5e098c\",\n    name: \"Lilly Conner\",\n    email: \"lillyconner@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n];\n\nconst _contacts = storageService.load(\"contacts\") || CONTACTS;\n\nfunction query(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var _contactsToReturn = _contacts;\n    if (filterBy) {\n      _contactsToReturn = filter(filterBy);\n    }\n    resolve(sort(_contactsToReturn));\n  });\n}\n\nfunction sort(_contacts) {\n  return _contacts.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) return -1;\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) return 1;\n    return 0;\n  });\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = _contacts.find((contact) => contact._id === id);\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`);\n  });\n}\n\nfunction removeContact(id) {\n  return new Promise((resolve, reject) => {\n    const idx = _contacts.findIndex((contact) => contact._id === id);\n    if (idx === -1) reject(`Contact id -${id} ,not found!`);\n    _contacts.splice(idx, 1);\n    storageService.save('contacts',_contacts)\n    resolve(_contacts);\n  });\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const idx = _contacts.findIndex((c) => contact._id === c._id);\n    if (idx === -1) reject(`Cant Update  id- ${contact._id}, not found!`);\n    _contacts.splice(idx, 1, contact);\n    storageService.save('contacts',_contacts)\n    resolve(contact);\n  });\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = utilsService.genID();\n    _contacts.push(contact);\n    storageService.save('contacts',_contacts)\n    resolve(contact);\n  });\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact);\n}\n\nfunction getEmptyContact() {\n  return {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  };\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase();\n  return _contacts.filter((contact) => {\n    return (\n      contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n    );\n  });\n}\n","import { contactService } from '../services/contactService';\n\nconst _setContacts = (contacts) => ({ type: 'SET_CONTACTS', contacts });\nconst _setFilter = (filterBy) => ({ type: 'SET_FILTER', filterBy });\nconst _saveContact = (contact) => ({ type: 'SAVE_CONTACT', contact });\nconst _remmoveContact = (contact) => ({ type: 'REMOVE_CONTACT', contact });\n\nexport function loadContacts() {\n  return async (dispatch, getState) => {\n    const contacts = await contactService.query(getState().contactReducer.filterBy);\n    dispatch(_setContacts(contacts));\n  };\n}\n\nexport function setFilter(filterBy) {\n  return (dispatch) => {\n    dispatch(_setFilter(filterBy));\n  };\n}\n\nexport function saveContact(contact) {\n  return async (dispatch) => {\n    const savedContact = await contactService.saveContact(contact);\n    dispatch(_saveContact(savedContact));\n  };\n}\n\nexport function removeContact(id) {\n  return async (dispatch) => {\n    try {\n      await contactService.removeContact(id);\n      dispatch(_remmoveContact(id));\n    } catch (err) {\n      console.log(`Problem Deleting ID ${id}`, err);\n    }\n  };\n}","import React, { Component } from 'react';\nimport { ContactsList } from '../../cmps/ContactsList/ContactsList';\nimport { LoadingCmp } from '../../cmps/LoadingCmp/LoadingCmp';\nimport { ContactsFilter } from '../../cmps/ContactsFilter/ContactsFilter';\nimport { loadContacts, setFilter } from '../../actions/contactsActions';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './Contacts.scss';\n\nexport class _Contacts extends Component {\n  async componentDidMount() {\n    await this.props.loadContacts();\n  }\n  onSetFilter = async ({ filterBy }) => {\n    this.props.setFilter(filterBy);\n    await this.props.loadContacts();\n  };\n  render() {\n    const { contacts } = this.props;\n    if (!contacts) return <LoadingCmp />;\n    return (\n      <section className='contacts-page flex col-layout'>\n        {contacts && (\n          <Link to='/contacts/edit'>\n            <button>\n              <i className='fas fa-plus'></i>\n            </button>\n          </Link>\n        )}\n        {contacts && <ContactsFilter onSetFilter={this.onSetFilter} />}\n        {contacts && <ContactsList contacts={contacts} />}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contactReducer.contacts,\n    filterBy: state.contactReducer.filterBy,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadContacts,\n  setFilter,\n};\n\nexport const Contacts = connect(mapStateToProps, mapDispatchToProps)(_Contacts);\n","import React, { Component } from \"react\";\nimport './Statistics.scss'\nimport { Sparklines, SparklinesLine, SparklinesSpots } from \"react-sparklines\";\nimport { bitcoinService } from \"../../services/bitcoinService\";\nimport { LoadingCmp } from \"../../cmps/LoadingCmp/LoadingCmp\";\nexport class Statistics extends Component {\n  state = { marketData: null, avgData: null, tradeData: null };\n  async componentDidMount() {\n    const marketData = await bitcoinService.getMarketPrice();\n    const avgData = await bitcoinService.getAvgBlockSize();\n    const tradeData = await bitcoinService.getTradeData();\n    this.setState({ marketData, avgData, tradeData });\n  }\n\n  render() {\n    const { marketData, avgData, tradeData } = this.state;\n    if (!marketData || !avgData || !tradeData) return <LoadingCmp />;\n    return (\n      <section className=\"statistics-page col-layout\">\n        <h1>Average USD market price across major bitcoin exchanges</h1>\n        <Sparklines data={marketData}>\n          <SparklinesLine style={{ stroke: \"black\", fill: \"none\" }} />\n          <SparklinesSpots style={{ fill: \"orange\" }} />\n        </Sparklines>\n        <hr/>\n        <h1>The average block size in MB</h1>\n        <Sparklines data={avgData}>\n          <SparklinesLine style={{ stroke: \"black\", fill: \"none\" }} />\n          <SparklinesSpots style={{ fill: \"orange\" }} />\n        </Sparklines>\n        <h1>\n          The total USD value of trading volume on major bitcoin exchanges.\n        </h1>\n        <Sparklines data={tradeData}>\n          <SparklinesLine style={{ stroke: \"black\", fill: \"none\" }} />\n          <SparklinesSpots style={{ fill: \"orange\" }} />\n        </Sparklines>\n      </section>\n    );\n  }\n}\n","import React from 'react'\nimport './AppFooter.scss'\n\nexport function AppFooter() {\n    return (\n        <footer>\n            <h1>Asaf Cohen</h1>\n        </footer>\n    )\n}\n","import { storageService } from '../services/storageService';\nimport { bitcoinService } from './bitcoinService';\nimport { utilsService } from './utilsService';\n\nexport const userService = {\n  login,\n  logout,\n  signup,\n  addMove,\n};\n\nconst _users = storageService.load('users') || [];\nvar loggedUser = storageService.load('loggedUser') || null;\n\nasync function signup(newUser) {\n  newUser.moves = [];\n  newUser.coins = 100;\n  newUser._id = utilsService.genID();\n  _users.push(newUser);\n  storageService.save('users', _users);\n  return newUser;\n}\n\nasync function login(name) {\n  const user = _users.find((u) => u.name === name);\n  if (user) {\n    loggedUser = user;\n    storageService.save('loggedUser', user);\n    return user;\n  }\n  return null;\n}\n\nfunction logout() {\n  storageService.remove('loggedUser');\n  loggedUser = null;\n}\n\nasync function addMove(status, toName, amount) {\n  await _buildMove(status, toName, amount);\n  const idx = _users.findIndex((u) => u._id === loggedUser._id);\n  _users.splice(idx, 1, loggedUser);\n  storageService.save('loggedUser', loggedUser);\n  storageService.save('users', _users);\n  return loggedUser;\n}\n\nasync function _buildMove(status, toName, amount) {\n  const move = {\n    status,\n    toName,\n    amount,\n    completedAt: new Date().toLocaleDateString(),\n    rateAtTransfer: await bitcoinService.getRate(amount),\n  };\n  loggedUser.coins -= amount;\n  loggedUser.moves.unshift(move);\n}\n","import { userService } from '../services/userService';\n\nconst _login = (user) => ({ type: 'LOGIN', user });\nconst _logout = () => ({ type: 'LOGOUT' });\nconst _transfer = (updatedUser) => ({ type: 'TRANSFER', updatedUser });\n\nexport function login(name) {\n  console.log('name to login ', name);\n  return async (dispatch) => {\n    try {\n      const user = await userService.login(name);\n      dispatch(_login(user));\n    } catch (err) {\n      console.log('Problem logging..', err);\n    }\n  };\n}\n\nexport function logout() {\n  return async (dispatch) => {\n    await userService.logout();\n    dispatch(_logout);\n  };\n}\n\nexport function signup(newUser) {\n  return async () => {\n    await userService.signup(newUser);\n  };\n}\n\nexport function transferCoins(status, toName, amount) {\n  return async (dispatch) => {\n    const updatedUser = await userService.addMove(status, toName, amount);\n    dispatch(_transfer(updatedUser));\n  };\n}\n","import './AppHeader.scss';\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/usersActions';\n\nclass _AppHeader extends Component {\n  state = { loggedUser: null };\n  async componentDidMount() {\n  }\n  logout = () => {\n    this.props.logout();\n    this.props.history.push('/login');\n  };\n\n  render() {\n    const { loggedUser } = this.props;\n    return (\n      <header className='flex space-between'>\n        <section className='logo '>\n          <img src={`images/bitcoin.svg`} alt='logo' />\n        </section>\n        <nav>\n          <ul className='flex clean-list'>\n            <Link to='/'>\n              <li>Home</li>\n            </Link>\n            <Link to='/contacts'>\n              <li>Contacts</li>\n            </Link>\n            <Link to='/statistics'>\n              <li>Statistics</li>\n            </Link>\n          </ul>\n          <Link to='/login'>{!loggedUser && <button className='login-btn'>Login</button>}</Link>\n          {loggedUser && (\n            <button className='logout-btn' onClick={this.logout}>\n              Logout\n            </button>\n          )}\n        </nav>\n      </header>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  loggedUser: state.userReducer.loggedUser,\n});\n\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(withRouter(_AppHeader));\n","import React, { Component } from 'react';\nimport './TransferFund.scss';\nimport { MoveList } from '../../cmps/MoveList/MoveList';\nimport { connect } from 'react-redux';\nimport { transferCoins } from '../../actions/usersActions';\n\n// import {}\nconst [SENT, RECIEVED] = ['Sent', 'Received'];\n\nexport class _TransferFund extends Component {\n  state = { errorMsg: null, coinsAmount: null };\n  handleChange = ({ target }) => {\n    const coinsAmount = +target.value;\n    this.setState({ coinsAmount });\n  };\n  onTransferCoins = async (ev) => {\n    ev.preventDefault();\n    const { contactName } = this.props;\n    const { coinsAmount } = this.state;\n    await this.props.transferCoins(SENT, contactName, coinsAmount);\n  };\n  get moves() {\n    return [];\n  }\n  render() {\n    const { errorMsg } = this.state;\n    return (\n      <section className='transfer flex col'>\n        <form onSubmit={this.onTransferCoins} className='flex'>\n          <input type='number' placeholder='Coins to Transfer' onChange={this.handleChange} name='coinsAmount' />\n          <button>Transfer</button>\n        </form>\n        {errorMsg && <h3 className='error'>{{ errorMsg }}</h3>}\n        <MoveList moves={this.moves} />\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  transferCoins,\n};\n\nexport const TransferFund = connect(null, mapDispatchToProps)(_TransferFund);\n","import React, { Component } from 'react';\nimport './ContactDetails.scss';\nimport { LoadingCmp } from '../../cmps/LoadingCmp/LoadingCmp';\nimport { contactService } from '../../services/contactService';\nimport { TransferFund } from '../../cmps/TransferFund/TransferFund';\nimport { MoveList } from '../../cmps/MoveList/MoveList';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nexport class _ContactDetails extends Component {\n  state = { contact: null };\n  async componentDidMount() {\n    await this.loadContact();\n  }\n  loadContact = async () => {\n    const { id } = this.props.match.params;\n    const contact = await contactService.getContactById(id);\n    this.setState({ contact });\n  };\n  render() {\n    const { contact } = this.state;\n    if (!contact) return <LoadingCmp />;\n    const { _id, name, email, phone } = contact;\n    const { loggedUser } = this.props;\n    return (\n      <section className='contact-details flex col'>\n        <img src={`https://robohash.org/${_id}?set=set5`} alt='profile-pic' />\n        <section className='contact-actions flex'>\n          <Link to='/contacts'>\n            <i className='fas fa-arrow-circle-left'></i>\n          </Link>\n          <Link to={`/contacts/edit/${_id}`}>\n            <i className='fas fa-user-edit' title='Edit User'></i>\n          </Link>\n        </section>\n        <section className='details flex col-layout'>\n          <h4> {name}</h4>\n          <h4> {email}</h4>\n          <h4> {phone}</h4>\n        </section>\n        <TransferFund contactName={name} />\n        <MoveList moves={loggedUser.moves.filter((move) => move.toName === name)} />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loggedUser: state.userReducer.loggedUser,\n});\n\nexport const ContactDetails = connect(mapStateToProps, null)(_ContactDetails);\n","import React, { Component } from 'react';\nimport { contactService } from '../../services/contactService';\nimport { LoadingCmp } from '../../cmps/LoadingCmp/LoadingCmp';\nimport { Link } from 'react-router-dom';\nimport { saveContact, removeContact } from '../../actions/contactsActions';\nimport { connect } from 'react-redux';\nimport './ContactEdit.scss';\n\nexport class _ContactEdit extends Component {\n  state = { contact: null };\n  componentDidMount() {\n    this.loadContact();\n  }\n  async loadContact() {\n    const { id } = this.props.match.params;\n    const contact = id ? await contactService.getContactById(id) : await contactService.getEmptyContact();\n    this.setState({ contact });\n  }\n  handleChange = ({ target }) => {\n    const [field, value] = [target.name, target.value];\n    this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }));\n  };\n  onSubmitChanges = async (ev) => {\n    ev.preventDefault();\n    await this.props.saveContact({ ...this.state.contact });\n    this.props.history.push('/contacts');\n  };\n  removeContact = async () => {\n    await this.props.removeContact(this.state.contact._id);\n    this.props.history.push('/contacts');\n  };\n  get title() {\n    const { contact } = this.state;\n    return contact._id ? 'Edit Contact' : 'Add New Contact';\n  }\n  render() {\n    if (!this.state.contact) return <LoadingCmp />;\n    const { _id, name, email, phone } = this.state.contact;\n    return (\n      <section className='edit-page'>\n        <form onSubmit={this.onSubmitChanges} className='flex col'>\n          <i className='remove fas fa-trash-alt' onClick={this.removeContact}></i>\n          <h3>{this.title}</h3>\n          <Link to='/contacts'>\n            <i className='back fas fa-arrow-circle-left'></i>\n          </Link>\n          <img src={`https://robohash.org/${_id}?set=set5`} alt='profile-pic' />\n          <input type='text' name='name' placeholder='Name' value={name} onChange={this.handleChange} />\n          <input type='text' name='email' placeholder='Email@example.com' value={email} onChange={this.handleChange} />\n          <input type='text' name='phone' placeholder='Phone' value={phone} onChange={this.handleChange} />\n          <button>Submit</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  saveContact,\n  removeContact,\n};\n\nexport const ContactEdit = connect(null, mapDispatchToProps)(_ContactEdit);\n","import React, { Component } from 'react';\nimport './Login.scss';\nimport { connect } from 'react-redux';\nimport { login, signup } from '../../actions/usersActions';\n\nexport class _Login extends Component {\n  state = {\n    name: null,\n    phone: null,\n    email: null,\n    userToLog: null,\n    errorMsg: null,\n  };\n\n  handleChange = ({ target }) => {\n    const [value, field] = [target.value, target.name];\n    this.setState({ [field]: value });\n  };\n\n  login = async (ev) => {\n    ev.preventDefault();\n    await this.props.login(this.state.userToLog);\n    if (this.props.loggedUser) {\n      this.props.history.push('/');\n    } else {\n      this.setState((prevState) => ({ ...prevState, errorMsg: 'Invaild Username' }));\n    }\n  };\n  signup = async (ev) => {\n    ev.preventDefault();\n    const { name, email, phone } = this.state;\n    if (!name || !email || !phone) return;\n    await this.props.signup({ name, email, phone });\n    this.props.login(name);\n    this.props.history.push('/');\n  };\n  render() {\n    const { errorMsg } = this.state;\n    return (\n      <section className='auth-page flex justify-center '>\n        <section className='signup-form flex col'>\n          <h4 className='form-title'>Sign Up</h4>\n          <form className='flex col'>\n            <input type='text' placeholder='Username' name='name' onChange={this.handleChange} />\n            <input type='text' placeholder='Email' name='email' onChange={this.handleChange} />\n            <input type='text' placeholder='Phone' name='phone' onChange={this.handleChange} />\n            <button onClick={this.signup}>Sign Up</button>\n          </form>\n        </section>\n        <span className='seperator'>OR</span>\n        <section className='login-form '>\n          <h4 className='form-title'>Login</h4>\n          <form className='flex col'>\n            <input type='text' placeholder='Username' name='userToLog' onChange={this.handleChange} />\n            <button onClick={this.login}>Login</button>\n          </form>\n          {errorMsg && <h4 className='error'>{this.errorMsg}</h4>}\n        </section>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  loggedUser: state.userReducer.loggedUser,\n});\nconst mapDispatchToProps = {\n  login,\n  signup,\n};\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login);\n","import React from 'react';\nimport { Home } from './pages/Home/Home';\nimport { Contacts } from './pages/Contacts/Contacts';\nimport { Statistics } from './pages/Statistics/Statistics';\nimport { AppFooter } from './cmps/AppFooter/AppFooter';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { ContactDetails } from './pages/ContactDetails/ContactDetails';\nimport { ContactEdit } from './pages/ContactEdit/ContactEdit';\nimport { Login } from './pages/Login/Login';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './style.scss';\n\nfunction App() {\n  return (\n    <div className='App main-layout'>\n      <Router>\n        <AppHeader />\n        <main>\n          <Route exact component={Home} path='/' />\n          <Route exact component={Contacts} path='/contacts' />\n          <Route exact component={Statistics} path='/Statistics' />\n          <Route exact component={Login} path='/login' />\n          <Route exact component={ContactDetails} path='/contacts/details/:id' />\n          <Route exact component={ContactEdit} path='/contacts/edit/:id?' />\n        </main>\n        <AppFooter />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n  contacts: null,\n  filterBy: null,\n};\n\nexport function ContactReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'SET_CONTACTS':\n      return {\n        ...state,\n        contacts: action.contacts,\n      };\n    case 'SET_FILTER':\n      return {\n        ...state,\n        filterBy: action.filterBy,\n      };\n    case 'REMOVE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter((c) => c._id !== action._id),\n      };\n    case 'SAVE_CONTACT':\n      return {\n        ...state,\n        contacts: [...state.contacts.filter((c) => c._id !== action.contact._id), action.contact],\n      };\n\n    default:\n      return state;\n  }\n}\n","import { storageService } from '../services/storageService';\n\nconst INITIAL_STATE = {\n  loggedUser: storageService.load('loggedUser') || null,\n};\n\nexport function UserReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        loggedUser: action.user,\n      };\n    case 'LOGOUT':\n      return {\n        loggedUser: null,\n      };\n    case 'TRANSFER':\n      return {\n        loggedUser: action.updatedUser,\n      };\n    default:\n      return state;\n  }\n}\n","import { ContactReducer } from './reducers/ContactReducer';\nimport { UserReducer } from './reducers/UserReducer';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  contactReducer: ContactReducer,\n  userReducer: UserReducer,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}